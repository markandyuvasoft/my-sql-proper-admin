// 2. login api.....

// const addUserLogin = async (req,res) =>{

//     try {

//         User.findOne({where:{email: req.body.email}}).then(user => {
//             if(user === null){
//                 res.status(401).json({
//                     message: "Invalid credentials!",
//                 });
//             }else{
//                 bcrypt.compare(req.body.password, user.password, function(err, result){
//                     if(result){
//                         const token = jwt.sign({
//                             email: user.email,
//                             userId: user.id
//                         }, 'itsajwttoken', function(err, token){
//                             res.status(200).json({
//                                 message: "Authentication successful!",
//                                 token: token
//                             });
//                         });
//                     }else{
//                         res.status(401).json({
//                             message: "Invalid credentials!",
//                         });
//                     }
//                 });
//             }
//         }).catch(error => {
//             res.status(500).json({
//                 message: "Something went wrong!",
//             });
//         });
//     } catch (error) {
//         res.status(400).send("error")

//     }

// }





const addUserLogin = async (req, res) => {
  try {
    let users = await User.findAll({});

    const unique = users.filter((val) => val.email === req.body.email);

    const data = unique[0].dataValues.isAdmin;

    if (data === true) {
      
        value.callApi(req,res)
  } 
    else {

        // console.log("sorry sir");
      User.findOne({ where: { email: req.body.email } })
        .then((user) => {
          if (user === null) {
            res.status(401).json({
              message: "Invalid credentials!",
            });
          } else {
            bcrypt.compare(
              req.body.password,
              user.password,
              function (err, result) {
                if (result) {
                  const token = jwt.sign(
                    {
                      email: user.email,
                      userId: user.id,
                    },
                    "itsajwttoken",
                    function (err, token) {
                      res.status(200).json({
                        message: "Authentication successful Welcome User!",
                        token: token,
                      });
                    }
                  );
                } else {
                  res.status(401).json({
                    message: "Invalid credentials!",
                  });
                }
              }
            );
          }
        })
        .catch((error) => {
          res.status(500).json({
            message: "Something went wrong!",
          });
        });
    }
  } catch (error) {
    res.status(400).send("error");
  }
};




// const addUser = async (req, res) => {
//   try {
//     User.findOne({ where: { email: req.body.email } })
//       .then((result) => {
//         if (User.result === null) {
//           res.status(401).json({
//             message: "Invalid credentials!",
//           });
//         } else if (result) {
//           res.status(400).json({
//             message: "Email already exists!",
//           });
//         } else {
//           bcrypt.genSalt(10, function (err, salt) {
//             bcrypt.hash(req.body.password, salt, function (err, hash) {
//               const user = {
//                 first_name: req.body.first_name,
//                 last_name: req.body.last_name,
//                 email: req.body.email,
//                 password: hash,
//                 isAdmin: req.body.isAdmin ? req.body.isAdmin : false,
//               };

//               User.create(user)
//                 .then((result) => {
//                   res.status(201).json({
//                     message: "User created successfully",
//                   });
//                 })
//                 .catch((error) => {
//                   res.status(500).json({
//                     message: "Something went wrong!",
//                   });
//                 });
//             });
//           });
//         }
//       })
//       .catch((error) => {
//         res.status(500).json({
//           message: "Something went wrong!",
//         });
//       });
//   } catch (error) {
//     res.status(400).send("error");
//   }
// };



//login.......

// const addUserLogin = async (req, res, next) => {
//   try {

//     const userdata = await User.findAll({ })

//     const unique = userdata.filter((val) => val.email === req.body.email);
   
//     const { email, password } = req.body;
    
//     if (!email || !password) {

//       res.status(400).send({ error: "please fill the proper field " })
//     }
    
//     else {
//     let user = await User.findOne({where:{ email: req.body.email }})

//     if (!user) {

//       return res.status(404).send({ error: "invalid email" })
//     }
//     else {
//       const checkpassword = await bcrypt.compare(req.body.password, user.password);

//       if (!checkpassword) {

//         return res.status(404).send({ error: "invalid password" })
//       }
//       else if (unique[0].dataValues.isAdmin === false) {
  
//         const token = await createtoken(user._id)
        
//         let Id = user.id
        
//         res.status(200).send({ success: "ðŸ˜‰welcome user..!!", token , Id})
      
//       }else {
//         res.status(200).send({ success: "ðŸ˜‰you are admin not user..!!"})

//       }
//     }
//   }
//  } catch (error) {
//     res.status(400).send("error");
//   }
// };